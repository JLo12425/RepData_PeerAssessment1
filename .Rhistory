abline(h=1.5,col="blue")
abline(h=0.4,col="red")
5
12
abline(h=0.05,col="green")
dist(dFsm)
hc
heatmap(dataMatrix,col=cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
cmat
points(cx,cy,col=c("red","orange","purple"),pch=3,cex=2,lwd=2)
mdist(x,y,cx,cy)
apply(distTmp,2,which.min)
points(x,y,phc=19,cex=2,col=cols1[newClust])
points(x,y,pch=19,cex=2,col=cols1[newClust])
tapply(x,newClust,mean)
tapply(y,newClust,mean)
points(newCx,newCy,col=cols1,pch=8,cex=2,lwd=2)
mdist(x,y,newCx,newCy)
apply(distTmp2,2,which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust2])
tapply(x,newClust2,mean)
tapply(y,newClust2,mean)
points(finalCx,finalCy,pch=9,cex=2,lwd=2,col=cols1)
kmeans(dataFrame,centers=3)
kmObj$iter
plot(x,y,col=kmObj$cluster,pch=19,cex=2)
points(kmObj$centers,col=c("black","red","green"),pch=3,cex=3,lwd=3)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R",local=TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu %*% t(matv)
matu %*% diag %*% t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2$v[,1:2]
svd2$d
dim(faceData)
a1 <- (svd1$u[,1] * svd1$d[1]) %*% svd1$v[,1]
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
a2 <- (svd1$u[,1:2] * svd1$d[1:2]) %*% t(svd1$v[,1:2])
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
dim(ssd)
names(ssd[,562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd,subject=1)
sub1 <- subset(ssd,subject==1)
dim(sub1)
names(sub1[,1:12])
myedit("showXY.R")
showMe(1:6)
mdist <- dist(x[,1:3])
mdist <- dist(sub1[,1:3])
hclust(mdist)
hclustering <- hclust(mdist)
myplclust(hclustering,lab.col=unclass(sub1$activity)
myplclust(hclustering,lab.col=unclass(sub1$activity))
myplclust(hclustering,lab.col=unclass(sub1$activity))
mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering,lab.col=unclass(sub1$activity)
myplclust(hclustering,lab.col=unclass(sub1$activity))
myplclust(hclustering,lab.col=unclass(sub1$activity))
svd1 <- svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon <- which.max(svd1$v[,2])
mdist <- dist(c(sub1[,10:12],maxCon)
mdist <- dist(c(sub1[,10:12],maxCon))
mdist <- dist(c(sub1[,10:12],maxCon))
info()
mdist
mdist <- dist(sub1[,c(10:12,maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering,lab.col=unclass(sub1$activity))
names(sub1[maxCon])
kClust <- kmeans(sub1[,-c(562,563)],centers=6)
table(kClust$cluster,sub1$activity)
kClust <- kmeans(sub1[,-c(562,563)],centers=6,nstart=100)
table(kClust$cluster,sub1$activity)
dim(kClust$centers)
laying <- which(kClust$size == 29)
plot(kClust$centers[laying,1:12],pch=19,ylab="Laying Cluster")
names(sub1[,1:3])
walkdown <- which(kClust$size==49)
plot(kClust$centers[walkdown,1:12],pch=19,ylab="Walkdown Cluster")
source("plot5.R")
source("plot5.R")
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
OnRoadGasL <- subset(SCC,EI.Sector=="Mobile - On-Road Gasoline Light Duty Vehicles")
OnRoadGasH <- subset(SCC,EI.Sector=="Mobile - On-Road Gasoline Heavy Duty Vehicles")
OnRoadDieselL <- subset(SCC,EI.Sector=="Mobile - On-Road Diesel Light Duty Vehicles")
OnRoadDieselH <- subset(SCC,EI.Sector=="Mobile - On-Road Diesel Heavy Duty Vehicles")
OnRoadSubset <- rbind(OnRoadGasL,OnRoadGasH,OnRoadDieselL,OnRoadDieselH)
mergedOnRoad <- merge(NEI,OnRoadSubset,by="SCC")
NEIBaltimore <- subset(mergedOnRoad,fips==24510)
NEILosAngeles <- subset(mergedOnRoad,fips==06037)
NEIYearsBaltimore <- aggregate(Emissions~year,NEIBaltimore,sum)
NEIYearsLosAngeles <- aggregate(Emissions~year,NEILosAngeles,sum)
head(NEILosAngeles)
NEILosAngeles <- subset(mergedOnRoad,fips==06037)
dim(NEILosAngeles)
NEILosAngeles <- subset(mergedOnRoad,fips=="06037")
dim(NEILosAngeles)
NEIYearsLosAngeles <- aggregate(Emissions~year,NEILosAngeles,sum)
plot(x=NEIYearsBaltimore$year,y=NEIYearsBaltimore$Emissions/1000,main="PM2.5 Emissions by Year - Motor Vehicles - Baltimore vs. Los Angeles",xlab="Year",ylab="Emissions (in thousands of tons)",pch=19,col="red")
points(x=NEIYearsLosAngeles$year,y=NEIYearsLosAngeles$Emissions/1000,pch=19,col="blue")
?points
?plot
plot(x=NEIYearsBaltimore$year,y=NEIYearsBaltimore$Emissions/1000,main="PM2.5 Emissions by Year - Motor Vehicles - Baltimore vs. Los Angeles",xlab="Year",ylab="Emissions (in thousands of tons)",type="n")
points(x=NEIYearsBaltimore$year,y=NEIYearsBaltimore$Emissions/1000,pch=19,col="red")
points(x=NEIYearsLosAngeles$year,y=NEIYearsLosAngeles$Emissions/1000,pch=19,col="blue")
dim(NEIYearsLosAngeles)
NEIYearsLosAngeles)
NEIYearsLosAngeles
?xlim
?plot
plot(x=NEIYearsBaltimore$year,y=NEIYearsBaltimore$Emissions/1000,main="PM2.5 Emissions by Year - Motor Vehicles - Baltimore vs. Los Angeles",xlab="Year",ylab="Emissions (in thousands of tons)",pch=19,col="red",xlim=c(0,5))
NEIYearsBaltimore
plot(x=NEIYearsBaltimore$year,y=NEIYearsBaltimore$Emissions/1000,main="PM2.5 Emissions by Year - Motor Vehicles - Baltimore vs. Los Angeles",xlab="Year",ylab="Emissions (in thousands of tons)",pch=19,col="red",ylim=c(0,5))
points(x=NEIYearsLosAngeles$year,y=NEIYearsLosAngeles$Emissions/1000,pch=19,col="blue")
source("plot6.R")
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
head(SCC)
dim(SCC)
dim(NEI)
head(NEI)
write.csv(SCC, file = "MyData.csv")
OnRoadGasL <- subset(SCC,EI.Sector=="Mobile - On-Road Gasoline Light Duty Vehicles")
OnRoadGasH <- subset(SCC,EI.Sector=="Mobile - On-Road Gasoline Heavy Duty Vehicles")
OnRoadDieselL <- subset(SCC,EI.Sector=="Mobile - On-Road Diesel Light Duty Vehicles")
OnRoadDieselH <- subset(SCC,EI.Sector=="Mobile - On-Road Diesel Heavy Duty Vehicles")
OnRoadSubset <- rbind(OnRoadGasL,OnRoadGasH,OnRoadDieselL,OnRoadDieselH)
dim(OnRoadSubset)
mergedOnRoad <- merge(NEI,OnRoadSubset,by="SCC")
NEIBaltimore <- subset(mergedOnRoad,fips==24510)
dim(NEIBaltimore)
mvs1 = Source_Classification_Code[grep("[Mm]obile|[Vv]ehicles", EI.Sector), SCC]
mvs1 = SCC[grep("[Mm]obile|[Vv]ehicles", EI.Sector), SCC]
?grep
library(swirl)
swirl()
dim(pm0)
head(pm0)
cnames
cnames <- strsplit(cnames,'|',fixed=TRUE)
cnames
make.names(cnames[[1]][wcol])
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log10(x0),log10(x1))
negative <- which(x1<0)
negative <- x1<0
sum(negative,na.rm=TRUE)
mean(negative,na.rm=TRUE)
dates <- pm1$Date
str(dates)
dates <- as.Date(as.character(dates),"%Y%m%d")
head(dates)
hist(dates[negative],"month")
str(site0)
?intersect
both <- intersect(site0,site1)
both
head(pm0)
cnt0 <- subset(pm0,pm0$State.Code == 36 & pm0$county.site %in% both)
cnt0 <- subset(pm0,State.Code == 36 & county.site %in% both)
cnt1 <- subset(pm1,State.Code == 36 & county.site %in% both)
sapply(split(cnt0,cnt0$county.site),nrow)
sapply(split(cnt1,cnt1$county.site),nrow)
pm0sub <- subset(cnt0,County.Code == 63 & Site.ID == 2008)
pm1sub <- subset(cnt1,County.Code == 63 & Site.ID == 2008)
x0sub < pm0sub$Sample.Value
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sub$Date),"%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date),"%Y%m%d")
par(mfrow=c(1,2),mar=c(4,4,2,1))
plot(dates0,x0sub,pch=20)
abline(median(x0sub,na.rm=TRUE),lwd=2)
abline
abline(h=median(x0sub,na.rm=TRUE),lwd=2)
plot(dates1,x1sub,pch=20)
abline(h=median(x1sub,na.rm=TRUE),lwd=2)
rng <- range(x0sub,x1sub,na.rm=T)
rng <- range(x0sub,x1sub,na.rm=TRUE)
rng
mn0 with(pm0,tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
mn0 <- with(pm0,tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mn0)
mn1 <- with(pm1,tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.frame(state=names(mn0),mean=mn0)
d1 <- data.frame(state=names(mn1),mean=mn1)
mrg <- merge(d0,d1,by="state")
dim(mrg)
head(mrg)
with(mrg,plot(rep(1,52),mrg[,2],xlim=c(0.5,2.5)))
with(mrg,points(rep(2,52),mrg[,3]))
segments(rep(1,52),mrg[,2],rep(2,52),mrg[,3])
mrg[mrg$mean.x < mrg$mean.y,]
library(swirl)
swirl()
install_from_swirl("Statistical Inference")
swril()
swirl()
33/36
deck
52
4/52
0
12/52
3/51
2/51
.64
.64
mypdf
integrate(mypdf,lower=0,upper=1.6)
sqrt(20)
sqrt(2)
.000997
.014985
.062383
0.062383
0.000997 / (0.000997 + 0.)
0.000997 / (0.000997 + 0.14985)
(.997*.001)/(.997*.001 + .015*.999)
3.5
expect_dice
dice_high
expert_dice(dice_high)
expect_dice(dice_high)
expect_dice(dice_low)
.5*(edh + edl)
1
integrate(myfunc,0,2)
spop
mean(spop)
allsam
apply(allsam,1,mean)
mean(smeans)
p <- c(0.1,0.2,0.3,0.4)
x <- 2:5
x
mean(p*x)
pnorm(2.8,lower.tail=FALSE)
pnorm(2.8)
1-pnorm(2.8)
qnorm(0.75)
x <- qnorm(0.75)*50
x
x + 1020
ppois(3,10)
?ppois
dpois(3,10)
library(swirl)
swirl()
dice_sqr
ex2_fair <- dice_sqr * PDF
ex2_fair <- dice_sqr * dice_fair
ex2_fair <- sum(dice_sqr * dice_fair)
ex2_fair - 3.5
ex2_fair - 3.5^2
sum(dice_sqr*dice_high)-3.5^2
sum(dice_sqr*dice_high)-edh^2
sd(apply(matrix(rnorm(10000),1000),1,mean))
1/sqrt(10)
1/sqrt(120)
sd(apply(matrix(runif(10000),1000),1,mean))
2/sqrt(10)
sd(apply(matrix(rpois(10000,4),1000),1,mean))
1/(2*sqrt(10))
sd(apply(matrix(sample(0:1,10000,TRUE),1000),1,mean))
.94208
pbinom(2,5,0.8,lower.tail=FALSE)
qnorm(0.10)
0
qnorm(0.975,mean=3,sd=2)
1.96*2+3
pnorm(1200,mean=1020,sd=50,lower.tail=FALSE)
pnorm((1200-1010)/50,lower.tail=FALSE)
pnorm((1200-1020)/50,lower.tail=FALSE)
qnorm(0.75,mean=1020,sd=50)
.53
.53
ppois(3,10)
ppois(3,2.5*4)
pbinom(5,1000,0.01)
ppois(5,5*1000)
ppois(5,1000*.01)
coinPlot(10)
coinPlot(10000)
qnorm(0.95)
0.6 + c(-1,1)*qnorm(0.975)*sqrt(0.6*0.4/100)
binom.test(60,100)
binom.test(60,100)$conf.int
mywald(0.2)
ACCompar(20)
lamb <- 5/94.32
lamb + c(-1,1)*qnorm(0.975)*sqrt(lamb/94.32)
poisson.test(5,94.32)$conf.int
poisson.test(5,94.32)$conf
pnorm(93,mean=100,sd=10)
qnorm(0.95,100,10)
pbinom(4,6,0.5)
pbinom(4,6,0.5,lower.tail=FALSE)
?pbinom
?punif
punif(.51,lower.tail=FALSE)
pnorm(.51,0.5,sqrt(1/12),lower.tail=FALSE)
pnorm(.51,0.5,sqrt(100/12),lower.tail=FALSE)
pnorm(.51,0.5,sqrt(1/12/100),lower.tail=FALSE)
ppois(20,33)
pnorm(70,mean=80,sd=10)
qnorm(0.95,mean=1100,sd=75)
qnorm(0.95,mean=1100,sd=7.5)
pbinom(4,0.5,5)
?pbinom
pbinom(4,5,0.5)
pbinom(4,5,0.5,lower.tail=FALSE)
pbinom(3,5,0.5,lower.tail=FALSE)
ppois(10,15)
getwd()
setwd("C:/Users/Jennifer.JenNewLaptop/Documents/GitHub/datasciencecoursera/RR Peer Assessment 1")
getwd()
setwd("C:/Users/Jennifer.JenNewLaptop/Documents/GitHub/datasciencecoursera/RepData_PeerAssessment1")
getwd()
activitydata <- read.csv("activity.csv")
activitydata$datetime <- strptime(paste(activitydata$date,activitydata$interval),format="%Y-%m-%d%S")
nummissingdays <- sum(is.na(activitydata$steps))
nummissingdays
str(activitydata)
table(activitydata$steps)
summary(activitydata$steps)
activitydata$avgsteps <- NULL
summary(activitydata)
activitydata$avgsteps <- 0
summary(activitydata)
?merge
activitydata$avgsteps <- NULL
summary(activitydata)
merge(activitydata,averagestepsperinterval,by=avgsteps)
avgstepsperinterval <- aggregate(activitydata$steps,by=list(interval=activitydata$interval),FUN=mean,na.rm=TRUE)
names(avgstepsperinterval) <- c("interval","avgsteps")
head(avgstepsperinterval)
merge(activitydata,averagestepsperinterval,by=avgsteps)
merge(activitydata,avgstepsperinterval,by=avgsteps)
merge(activitydata,avgstepsperinterval,by=interval)
merge(activitydata,avgstepsperinterval,by="interval")
head(activitydata)
activitydata <- merge(activitydata,avgstepsperinterval,by="interval")
head(activitydata)
dim(activitydata)
sum(is.na(activitydata$steps))
?where
?where.by
activitydata2 <- merge(activitydata,avgstepsperinterval,by="interval")
head(activitydata2)
DT = as.data.table(activitydata2)
activitydata2[steps=="N/A", est := avgsteps.x]
DT = as.data.frame.table(activitydata2)
DT[steps="N/A", est := avgsteps.x]
DT[is.na(steps), est := avgsteps.x]
?:=
?est
DT[is.na(steps), steps := avgsteps.x]
activitydata2 <- within(activitydata2, steps[steps=="N/A"] <- avgsteps.x)
activitydata2 <- within(activitydata2, steps[is.na(steps)] <- avgsteps.x)
activitydata2$steps <- activitydata2$steps[is.na(activitydata2$steps)] <- activitydata2$avgsteps.x
head(activitydata2)
sum(is.na(activitydata2$steps))
activitydata2 <- merge(activitydata,avgstepsperinterval,by="interval")
sum(is.na(activitydata2$steps))
activitydata2$avgsteps.y <- NULL
head(activitydata2)
names(activitydata2$avgsteps.x) <- "avgsteps"
head(activitydata2)
dim(activitydata2)
activitydata2$steps <- activitydata2$steps[is.na(activitydata2$steps)] <- "hello")
activitydata2$steps <- activitydata2$steps[is.na(activitydata2$steps)] <- "hello"
head(activitydata2)
sum(activitydata2$steps=="hello")
summary(activitydata2$steps)
str(activitydata2$steps)
activitydata2 <- merge(activitydata,avgstepsperinterval,by="interval")
activitydata2$avgsteps.y <- NULL
head(activitydata2)
group <- c("a","a","a","b","b","b","c","c","c")
numericVar <- c(1,2,NA,4,NA,6,NA,8,0)
theData <- data.frame(group,numericVar)
theData
aggData <- aggregate(numericVar ~ group, FUN=mean,data=theData,na.action="na.omit")
aggData
names(aggData)[2] <- "numericMean"
aggData
mergedData <- merge(theData,aggData)
mergedData
mergedData$numericVar[is.na(mergedData$numericVar)] <- mergedData$numericMean
mergedData$numericVar[is.na(mergedData$numericVar)] <- mergedData$numericMean[is.na(mergedData$numericVar)]
mergedData
mergedData <- merge(theData,aggData)
mergedData
endnum <- len(mergeddata)
endnum <- length(mergedData$group)
endnum
for(i in 1:endnum){if(is.na(mergedData[i,2]){mergedData[i,2]<-mergedData[i,3]})}
for(i in 1:endnum){if(is.na(mergedData[i,2])){mergedData[i,2]<-mergedData[i,3]}}
mergedData
activitydata2 <- merge(activitydata,avgstepsperinterval,by="interval")
activitydata2$avgsteps.y <- NULL
activitydata2 <- merge(activitydata,avgstepsperinterval)
head(activitydata2)
endnum <- length(activitydata$steps)
endnum
for(i in 1:endnum){if(is.na(activitydata2[i,3])){activitydata2[i,3]<-activitydata2[i,2]}}
head(activitydata2)
sum(is.na(activitydata2$steps))
nummissingdaysnew <- prettyNum(sum(is.na(activitydata2$steps)),big.mark=",",digits=2)
nummissingdaysnew
activitydata2 <- merge(activitydata,avgstepsperinterval)
endnum <- length(activitydata2$steps)
head(activitydata20)
head(activitydata2)
for(i in 1:endnum){if(is.na(activitydata2[i,3])){activitydata2[i,3]<-activitydata2[i,2]}}
head(activitydata2)
nummissingdaysnew <- prettyNum(sum(is.na(activitydata2$steps)),big.mark=",",digits=2)
nummissingdaysnew
colors()
activitydata2$weekday <- weekday(activitydata2$datetime)
activitydata2$weekday <- weekdays(activitydata2$datetime)
head(activitydata2)
class(activitydata2$weekday)
activitydata2$weekend <- as.factor(c("weekend","weekday"))
class(activitydata2$weekend)
str(activitydata2)
activitydata2$weekend <- ifelse(activitydata2$weekday == "Saturday" | activitydata2$weekday == "Sunday", "weekend", "weekday")
activitydata2[1:50,]
activitydataweekend <- subset(activitydata2,activitydata2$weekend=="weekend")
avgstepsperintervalweekend <- aggregate(activitydataweekend$steps,by=list(interval=activitydataweekend$interval),FUN=mean,na.rm=TRUE)
names(avgstepsperintervalweekend) <- c("interval","avgsteps")
head(avgstepsperintervalweekend)
activitydataweekday <- subset(activitydata2,activitydata2$weekend=="weekday")
avgstepsperintervalweekday <- aggregate(activitydataweekday$steps,by=list(interval=activitydataweekday$interval),FUN=mean,na.rm=TRUE)
names(avgstepsperintervalweekday) <- c("interval","avgsteps")
head(avgstepsperintervalweekday)
?par
par(mfcol=2)
?mfcol
par(mfrow=c(1,2))
plot(avgstepsperintervalweekend$interval,avgstepsperintervalweekend$avgsteps,type="l",main="Time Series - Average Steps On Weekends",xlab="Time Interval (seconds)",ylab="Average Steps",col="peachpuff4")
plot(avgstepsperintervalweekday$interval,avgstepsperintervalweekday$avgsteps,type="l",main="Time Series - Average Steps On Weekdays",xlab="Time Interval (seconds)",ylab="Average Steps",col="green")
par(mfrow=c(2,1))
plot(avgstepsperintervalweekend$interval,avgstepsperintervalweekend$avgsteps,type="l",main="Time Series - Average Steps On Weekends",xlab="Time Interval (seconds)",ylab="Average Steps",col="peach")
plot(avgstepsperintervalweekend$interval,avgstepsperintervalweekend$avgsteps,type="l",main="Time Series - Average Steps On Weekends",xlab="Time Interval (seconds)",ylab="Average Steps",col="deeppink")
plot(avgstepsperintervalweekday$interval,avgstepsperintervalweekday$avgsteps,type="l",main="Time Series - Average Steps On Weekdays",xlab="Time Interval (seconds)",ylab="Average Steps",col="green")
par(mfrow=c(2,1))
plot(avgstepsperintervalweekend$interval,avgstepsperintervalweekend$avgsteps,type="l",main="Time Series - Average Steps On Weekends",xlab="Time Interval (seconds)",ylab="Average Steps",col="deeppink")
plot(avgstepsperintervalweekday$interval,avgstepsperintervalweekday$avgsteps,type="l",main="Time Series - Average Steps On Weekdays",xlab="Time Interval (seconds)",ylab="Average Steps",col="green")
?xyplot
?panel
?panel.xyplot
avgstepsperinterval2 <- aggregate(activitydata2$steps,by=list(interval=activitydata2$interval),FUN=mean,na.rm=TRUE)
avgstepsperinterval
avgstepsperinterval2 <- aggregate(activitydata2$steps,by=list(interval=activitydata2$interval,weekend=activitydata2$weekend),FUN=mean,na.rm=TRUE)
avgstepsperinterval2
panel.xyplot(x=avgstepsperinterval2$interval,y=avgstepsperinterval2$x,)
names(avgstepsperinterval2) <- c("interval","weekend","avgsteps")
head(avgstepsperinterval2)
avgstepsperinterval2 <- aggregate(activitydata2$steps,by=list(interval=activitydata2$interval,weekend=activitydata2$weekend),FUN=mean,na.rm=TRUE)
head(avgstepsperinterval2)
names(avgstepsperinterval2) <- c("interval","weekend","avgsteps")
panel.xyplot(x=avgstepsperinterval2$interval,y=avgstepsperinterval2$avgsteps,type="l",groups=avgstepsperinterval2$weekend)
library(lattice)
panel.xyplot(x=avgstepsperinterval2$interval,y=avgstepsperinterval2$avgsteps,type="l",groups=avgstepsperinterval2$weekend)
xyplot(avgstepsperinterval2$avgsteps~avgstepsperinterval2$interval|avgstepsperinterval2$weekend,avgstepsperinterval2)
xyplot(avgstepsperinterval2$avgsteps~avgstepsperinterval2$interval|avgstepsperinterval2$weekend,avgstepsperinterval2,type="l")
xyplot(avgstepsperinterval2$avgsteps~avgstepsperinterval2$interval|avgstepsperinterval2$weekend,avgstepsperinterval2,type="l",xlab="Time Interval (seconds)",ylab="Average Steps",main="Time Series - Average Steps per Time Interval")
